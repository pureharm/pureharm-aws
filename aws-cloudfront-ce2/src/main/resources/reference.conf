#See scaladoc health-backend/shared-utils/aws-cloudfront/src/test/scala/health/haws/cloudfront/CloudfrontLiveURLSigningTest.scala
#for further hints on how to actually configure AWS S3 and Cloudfront to work together properly...
pureharm {
  aws {
    cloudfront {
      #see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-canned-policy.html
      distribution-domain = "xyz.cloudfront.net"
      distribution-domain = ${?PUREHARM_AWS_CLOUDFRONT_DISTRIBUTION_DOMAIN}

      #see https://support.s3mediamaestro.com/article/204-how-to-obtain-your-cloudfront-key-pair-id-and-private-key
      private-key-file-path = "secret-access-key-not-committing-it-to-github-lol"
      private-key-file-path = ${?PUREHARM_AWS_CLOUDFRONT_KEY_FILE_PATH}

      #see https://support.s3mediamaestro.com/article/204-how-to-obtain-your-cloudfront-key-pair-id-and-private-key
      # see on how to generate keys that are compatible with cloudfront:
      # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html#private-content-creating-cloudfront-key-pairs-procedure
      key-pair-id = "not-committing-it-to-github-lol"
      key-pair-id = ${?PUREHARM_AWS_CLOUDFRONT_KEY_PAIR_ID}

      url-expiration-time = 7 days
      url-expiration-time = ${?PUREHARM_AWS_CLOUDFRONT_URL_EXPIRATION_TIME}
    }
  }
}